<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      internalLogFile="c:\dev\nlog-internal.log"
      internalLogLevel="Trace">

  <extensions>
    <add assembly="NLog.ServiceBus"/>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <targets>
    <!-- Send log events to a service bus topic as json -->
    <target name="asbtopic"
            xsi:type="ServiceBusTopic">
      <!-- all of the below elements can be attributes on the target directly -->

      <!-- 
      specify a connection string and the target service bus namespace' entity path
      this is a layout that is evaluated only once when the target is initialized from a null event
      with NLog.Web.AspNetCore or NLog.Extensions.Logging you can use values from appsettings.json using the layout render ${configsetting:item=key}
      -->
      <connectionString>${configsetting:item=AsbConnectionString}</connectionString>
      <entityPath>foo</entityPath>

      <!-- specify the content type on the message, this is a layout if you want to specify dynamic values per log event -->
      <contentType>application/json</contentType>

      <!-- set properties on a message -->
      <message-property name="MessageId" layout="${mdlc:id}" />

      <!-- set custom user properties in the message.UserProperties dictionary -->
      <user-property name="mdlcid" layout="${mdlc:id}" />

      <!-- the actual message layout, it's not limited to JsonLayout -->
      <layout xsi:type="JsonLayout">
        <attribute name="logger" layout="${logger}" />
        <attribute name="timestamp" layout="${date:universalTime=true:format=o}" />
        <attribute name="level" layout="${level:upperCase=true}" />
        <attribute name="message" layout="${message}" />
        <attribute name="method" layout="${aspnet-request-method}" />
        <attribute name="traceId" layout="${aspnet-TraceIdentifier:ignoreActivityId=true}" />
        <attribute name="exception" layout="${exception:format=@}" encode="false" />
        <attribute name="id" layout="${mdlc:id}" />
        <attribute name="method" layout="${mdlc:method}" />
      </layout>
    </target>

    <!-- Send log events to a service bus queue as a plain string -->
    <target name="asbqueue"
            xsi:type="ServiceBusQueue"
            connectionString="${configsetting:item=AsbConnectionString}"
            entityPath="bar"
            contentType="text/plain"
            layout="${date:format=o}|${level}|${logger} ${message} ${onexception:inner=${exception:format=@}}">
      <message-property name="MessageId" layout="${mdlc:id}" />
      <user-property name="mdlcid" layout="${mdlc:id}" />
    </target>
  </targets>

  <rules>
    <logger name="*" minlevel="Debug" writeTo="asbtopic">
      <!-- you can use filters to limit what messages are actually sent -->
      <filters defaultAction='Log'>
        <when condition="length('${mdlc:id}') == 0" action="Ignore" />
      </filters>
    </logger>
    <logger name="*" minlevel="Debug" writeTo="asbqueue" />
  </rules>

</nlog>